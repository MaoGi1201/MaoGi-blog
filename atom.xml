<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Visuper - 博客</title>
  
  
  <link href="/visuper-blog/atom.xml" rel="self"/>
  
  <link href="http://visuper.github.io/visuper-blog/"/>
  <updated>2018-02-18T20:37:00.329Z</updated>
  <id>http://visuper.github.io/visuper-blog/</id>
  
  <author>
    <name>Visuper</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>从零开始的图片服务器之旅—Ubuntu篇</title>
    <link href="http://visuper.github.io/visuper-blog/2018/10/16/2018-01-16-%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%9A%84%E5%9B%BE%E7%89%87%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%B9%8B%E6%97%85%E4%B9%8BUbuntu%E7%AF%87/"/>
    <id>http://visuper.github.io/visuper-blog/2018/10/16/2018-01-16-从零开始的图片服务器之旅之Ubuntu篇/</id>
    <published>2018-10-16T13:23:09.000Z</published>
    <updated>2018-02-18T20:37:00.329Z</updated>
    
    <content type="html"><![CDATA[<h3 id="常规操作"><a href="#常规操作" class="headerlink" title="常规操作"></a>常规操作</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo apt-get update</span><br></pre></td></tr></table></figure><a id="more"></a><h3 id="安装vsftpd"><a href="#安装vsftpd" class="headerlink" title="安装vsftpd"></a>安装vsftpd</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo apt-get install vsftpd</span><br></pre></td></tr></table></figure><p>在home目录下创建静态资源文件夹images<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo mkdir -p /home/ftpuser/www/images</span><br></pre></td></tr></table></figure></p><p>在ftpuser目录下新建用户<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo useradd -d /home/ftpuser -s /bin/bash ftpuser</span><br></pre></td></tr></table></figure></p><p>设置ftpuser用户密码<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo passwd ftpuser</span><br></pre></td></tr></table></figure></p><h4 id="FTP相关命令"><a href="#FTP相关命令" class="headerlink" title="FTP相关命令"></a>FTP相关命令</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">#启动ftp服务</span><br><span class="line">$ sudo service vsftpd start</span><br><span class="line"># 查看ftp服务状态</span><br><span class="line">$ sudo service vsftpd status </span><br><span class="line"># 重启ftp服务</span><br><span class="line">$ sudo service vsftpd restart</span><br><span class="line"># 关闭ftp服务</span><br><span class="line">$ sudo service vsftpd stop</span><br></pre></td></tr></table></figure><p>在虚拟机浏览器中输入ftp://本机ip地址或localhost，回车后会弹出输入框，根据提示输入用户名和密码<br>备注：我的用户名是：ftpuser，密码是自己设置的：sasa</p><h4 id="修改vsftpd-conf配置文件"><a href="#修改vsftpd-conf配置文件" class="headerlink" title="修改vsftpd.conf配置文件"></a>修改vsftpd.conf配置文件</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo gedit /etc/vsftpd.conf</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">匿名登陆，注释掉或者改为NO</span><br><span class="line">#anonymous_enable=YES</span><br><span class="line">允许本地用户登陆</span><br><span class="line">local_enable=YES</span><br><span class="line">可写,注意删除#</span><br><span class="line">write_enable=YES</span><br></pre></td></tr></table></figure><h4 id="更改文件夹读写权限"><a href="#更改文件夹读写权限" class="headerlink" title="更改文件夹读写权限"></a>更改文件夹读写权限</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo chown -R  ftpuser /home/ftpuser</span><br></pre></td></tr></table></figure><h4 id="关闭防火墙"><a href="#关闭防火墙" class="headerlink" title="关闭防火墙"></a>关闭防火墙</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo ufw disable</span><br></pre></td></tr></table></figure><p>使用工具进行文件上传，如：<a href="https://filezilla-project.org/download.php?type=server" target="_blank" rel="external">FileZilla</a>、<a href="http://rj.baidu.com/soft/detail/11051.html?ald" target="_blank" rel="external">FlashFXP</a></p><h3 id="安装nginx"><a href="#安装nginx" class="headerlink" title="安装nginx"></a>安装nginx</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo apt-get install nginx</span><br></pre></td></tr></table></figure><p>简单介绍：<br>ubuntu安装完nginx之后的文件结构大致为：</p><pre><code>1. 配置文件: /etc/nginx2. 虚拟主机：/etc/nginx/sites-available3. 启动程序文件：/usr/sbin/nginx4. 日志：/var/log/nginx，分别是access.log和error.log5. 启动脚本：/etc/init.d6. 默认的虚拟主机的目录：/usr/share/nginx/html</code></pre><h4 id="启动nginx"><a href="#启动nginx" class="headerlink" title="启动nginx"></a>启动nginx</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo /etc/init.d/nginx start</span><br></pre></td></tr></table></figure><h4 id="配置nginx静态资源库"><a href="#配置nginx静态资源库" class="headerlink" title="配置nginx静态资源库"></a>配置nginx静态资源库</h4><p>编辑default配置文件:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo gedit /etc/nginx/sites-available/default</span><br></pre></td></tr></table></figure></p><p>修改内容如下(注意写有中文的地方即可)：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">    #端口可根据自己的需要更改，我的修改为8888</span><br><span class="line">    listen 8888 default_server;</span><br><span class="line">    listen [::]:888 default_server;</span><br><span class="line"></span><br><span class="line">    # SSL configuration</span><br><span class="line">    #</span><br><span class="line">    # listen 443 ssl default_server;</span><br><span class="line">    # listen [::]:443 ssl default_server;</span><br><span class="line">    #</span><br><span class="line">    # Note: You should disable gzip for SSL traffic.</span><br><span class="line">    # See: https://bugs.debian.org/773332</span><br><span class="line">    #</span><br><span class="line">    # Read up on ssl_ciphers to ensure a secure configuration.</span><br><span class="line">    # See: https://bugs.debian.org/765782</span><br><span class="line">    #</span><br><span class="line">    # Self signed certs generated by the ssl-cert package</span><br><span class="line">    # Don&apos;t use them in a production server!</span><br><span class="line">    #</span><br><span class="line">    # include snippets/snakeoil.conf;</span><br><span class="line"></span><br><span class="line">    root /var/www/html;</span><br><span class="line"></span><br><span class="line">    # Add index.php to the list if you are using PHP</span><br><span class="line">    index index.html index.htm index.nginx-debian.html;</span><br><span class="line"></span><br><span class="line">    server_name _;</span><br><span class="line"></span><br><span class="line">    location / &#123;</span><br><span class="line">        # First attempt to serve request as file, then</span><br><span class="line">        # as directory, then fall back to displaying a 404.</span><br><span class="line">        try_files $uri $uri/ =404;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">   #配置图片根目录</span><br><span class="line">   #在server节点里添加url映射，加一个location</span><br><span class="line"></span><br><span class="line">   location /images &#123;</span><br><span class="line">            root   /home/ftpuser/www/;</span><br><span class="line">            autoindex on;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h4 id="编辑nginx-conf配置文件"><a href="#编辑nginx-conf配置文件" class="headerlink" title="编辑nginx.conf配置文件"></a>编辑nginx.conf配置文件</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo gedit /etc/nginx/nginx.conf</span><br></pre></td></tr></table></figure><p>默认配置有以下内容，将第一行 <code>user: www-data;</code> 修改为： <code>user ftpuser;</code>  目的是便于上传的文件nginx有权限访问<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">user www-data;</span><br><span class="line">worker_processes auto;</span><br><span class="line">pid /run/nginx.pid;</span><br><span class="line"></span><br><span class="line">events &#123;</span><br><span class="line">    worker_connections 768;</span><br><span class="line">    # multi_accept on;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h4 id="重启nginx"><a href="#重启nginx" class="headerlink" title="重启nginx"></a>重启nginx</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo /etc/init.d/nginx restart</span><br></pre></td></tr></table></figure><h4 id="浏览器访问路径"><a href="#浏览器访问路径" class="headerlink" title="浏览器访问路径"></a>浏览器访问路径</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.169.129:8888/images</span><br></pre></td></tr></table></figure><p>IP地址和端口根据自己的虚拟机和配置填写</p>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;常规操作&quot;&gt;&lt;a href=&quot;#常规操作&quot; class=&quot;headerlink&quot; title=&quot;常规操作&quot;&gt;&lt;/a&gt;常规操作&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ sudo apt-get update&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="小试牛刀" scheme="http://visuper.github.io/visuper-blog/categories/%E5%B0%8F%E8%AF%95%E7%89%9B%E5%88%80/"/>
    
    
      <category term="潜龙在渊" scheme="http://visuper.github.io/visuper-blog/tags/%E6%BD%9C%E9%BE%99%E5%9C%A8%E6%B8%8A/"/>
    
  </entry>
  
  <entry>
    <title>从零开始的Redis之旅—Ubuntu篇</title>
    <link href="http://visuper.github.io/visuper-blog/2018/01/15/2018-01-15-%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%9A%84Redis%E4%B9%8B%E6%97%85%E4%B9%8BUbuntu%E7%AF%87/"/>
    <id>http://visuper.github.io/visuper-blog/2018/01/15/2018-01-15-从零开始的Redis之旅之Ubuntu篇/</id>
    <published>2018-01-15T12:19:00.000Z</published>
    <updated>2018-02-18T20:37:16.867Z</updated>
    
    <content type="html"><![CDATA[<p>最近的学习中，讲的都是在CenterOS上的Redis简单使用，奈何自己的笔记本上只有Ubuntu系统（版本：Ubuntu 16.04.3 LTS），翻阅网上各类关于Ubuntu上安装Redis的教程，记录自己不断踩坑的过程 <a id="more"></a></p><h3 id="Redis安装"><a href="#Redis安装" class="headerlink" title="Redis安装"></a>Redis安装</h3><p>在执行所有操作前，先使用命令更新软件列表<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo apt-get update</span><br></pre></td></tr></table></figure></p><p>通过以下步骤下载，解压，编译：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ wget http://download.redis.io/releases/redis-4.0.6.tar.gz      ---下载</span><br><span class="line">$ tar -zxvf redis-4.0.6.tar.gz         ---解压</span><br><span class="line">$ sudo chmod -R 777 /usr/local      ---获取文件夹修改权限</span><br><span class="line">$ mv redis-4.0.6    /usr/local                                   ---将解压后的redis移动至/usr/local下</span><br><span class="line">$ cd /usr/local/redis-4.0.6                                      ---进入解压缩后的文件夹</span><br><span class="line">$ make                                                           ---编译</span><br></pre></td></tr></table></figure></p><p>备注：Redis2.x版本前不支持集群环境搭建，需要Redis3.x版本以上</p><h3 id="Redis服务启动"><a href="#Redis服务启动" class="headerlink" title="Redis服务启动"></a>Redis服务启动</h3><p>make(编译)完后 redis-4.0.6目录下会出现编译后的redis服务程序redis-server，还有用于测试的客户端程序redis-cli，两个程序位于安装目录 src 目录下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ cd src</span><br><span class="line">$ ./redis-server</span><br></pre></td></tr></table></figure></p><p>这种方式启动redis 使用的是默认配置，也可以通过启动参数告诉redis使用指定配置文件使用下面命令启动：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ cd src</span><br><span class="line">$ ./redis-server ../redis.conf</span><br></pre></td></tr></table></figure></p><p>备注：redis.conf是一个默认的配置文件，我们可以根据需要使用自己的配置文件</p><p>启动redis服务进程后，就可以使用测试客户端程序redis-cli和redis服务交互了<br>如下例子：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ src/redis-cli</span><br><span class="line">redis&gt; set foo FuckRedis</span><br><span class="line">OK</span><br><span class="line">redis&gt; get foo</span><br><span class="line">&quot;FuckRedis&quot;</span><br></pre></td></tr></table></figure></p><h3 id="Redis集群安装"><a href="#Redis集群安装" class="headerlink" title="Redis集群安装"></a>Redis集群安装</h3><p>要让集群正常工作至少需要3个主节点，我们创建6个redis节点，其中三个为主节点，三个为从节点，对应的redis节点的ip和端口对应关系如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">192.168.169.129:7000</span><br><span class="line">192.168.169.129:7001</span><br><span class="line">192.168.169.129:7002</span><br><span class="line">192.168.169.129:7003</span><br><span class="line">192.168.169.129:7004</span><br><span class="line">192.168.169.129:7005</span><br></pre></td></tr></table></figure></p><h4 id="第一步：创建集群环境所需的目录"><a href="#第一步：创建集群环境所需的目录" class="headerlink" title="第一步：创建集群环境所需的目录"></a>第一步：创建集群环境所需的目录</h4><p>在解压缩后的redis-4.0.6同根目录下新建文件夹cluster<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ mkdir -p /usr/local/cluster</span><br></pre></td></tr></table></figure></p><p>同时在cluster下新建6个文件夹<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ cd /usr/local/cluster</span><br><span class="line">$ mkdir  7000 7001 7002 7003 7004 7005</span><br></pre></td></tr></table></figure></p><h4 id="第二步：修改配置文件redis-conf"><a href="#第二步：修改配置文件redis-conf" class="headerlink" title="第二步：修改配置文件redis.conf"></a>第二步：修改配置文件redis.conf</h4><p>先将redis-4.0.6文件夹下的redis.conf复制到cluster<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ cp /usr/local/redis-4.0.6/redis.conf  /usr/local/cluster</span><br></pre></td></tr></table></figure></p><p>使用vi编辑修改:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ cd /usr/local/cluster</span><br><span class="line">$ vi redis.conf</span><br></pre></td></tr></table></figure></p><p> vi命令参考<a href="http://www.linuxidc.com/Linux/2009-04/19489.htm" target="_blank" rel="external">此篇文章</a>，感觉vi命令麻烦的话，使用：<br> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo gedit redis.conf</span><br></pre></td></tr></table></figure></p><p> 修改配置文件内容如下（修改配置时注意去掉前面的注释# ）:<br> <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">port  7000          ---端口7000，7001，7002，7003，7004，7005        </span><br><span class="line">bind 192.168.169.129              ---默认ip为192.168.169.129，需要改为其他节点机器可访问的ip，否则创建集群时无法访问对应的端口，无法创建集群</span><br><span class="line">daemonize    yes                      ---redis后台运行</span><br><span class="line">cluster-enabled  yes          ---开启集群  把注释#去掉</span><br><span class="line">cluster-config-file  nodes_7000.conf  ---集群的配置  配置文件首次启动自动生成 7000，7001，7002，7003，7004，7005</span><br><span class="line">cluster-node-timeout  15000           ---请求超时  默认15秒，可自行设置</span><br><span class="line">appendonly  yes                       ---aof日志开启  有需要就开启，它会每次写操作都记录一条日志</span><br></pre></td></tr></table></figure></p><p>备注：（我的本机ip是192.168.169.129）可通过<code>$ ifconfig</code>查看本机ip<br>再将修改后的redis.conf复制到cluster下的6个文件夹中<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ cp /usr/local/cluster/redis.conf  /usr/local/cluster/7000/</span><br><span class="line">$ cp /usr/local/cluster/redis.conf  /usr/local/cluster/7001/</span><br><span class="line">$ cp /usr/local/cluster/redis.conf  /usr/local/cluster/7002/</span><br><span class="line">$ cp /usr/local/cluster/redis.conf  /usr/local/cluster/7003/</span><br><span class="line">$ cp /usr/local/cluster/redis.conf  /usr/local/cluster/7004/</span><br><span class="line">$ cp /usr/local/cluster/redis.conf  /usr/local/cluster/7005/</span><br></pre></td></tr></table></figure></p><p>分别进入到上面的六个新建的文件夹中， 按照上面的配置介绍中的样例进行对应修改</p><p>比较麻烦的方式启动服务：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$ cd /usr/local/redis-4.0.6/src/</span><br><span class="line">$ redis-server ../../cluster/7000/redis.conf</span><br><span class="line">$ redis-server ../../cluster/7001/redis.conf</span><br><span class="line">$ redis-server ../../cluster/7002/redis.conf</span><br><span class="line">$ redis-server ../../cluster/7003/redis.conf</span><br><span class="line">$ redis-server ../../cluster/7004/redis.conf</span><br><span class="line">$ redis-server ../../cluster/7005/redis.conf</span><br></pre></td></tr></table></figure></p><p>我个人使用的方式，不喜欢的可不用<br>脚本快速启动服务：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">$ cd /usr/loacl/cluster</span><br><span class="line">$ vi redis-start.sh</span><br><span class="line"></span><br><span class="line">#填入以下命令：</span><br><span class="line">cd /usr/local/cluster/7000/</span><br><span class="line">redis-server redis.conf</span><br><span class="line">cd /usr/local/cluster/7001/</span><br><span class="line">redis-server redis.conf</span><br><span class="line">cd /usr/local/cluster/7002/</span><br><span class="line">redis-server redis.conf</span><br><span class="line">cd /usr/local/cluster/7003/</span><br><span class="line">redis-server redis.conf</span><br><span class="line">cd /usr/local/cluster/7004/</span><br><span class="line">redis-server redis.conf</span><br><span class="line">cd /usr/local/cluster/7005/</span><br><span class="line">redis-server redis.conf</span><br></pre></td></tr></table></figure></p><p>启动服务：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ./redis-start.sh</span><br></pre></td></tr></table></figure></p><p>使用脚本快速关闭服务：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">$ cd /usr/local/cluster</span><br><span class="line">$ vi redis-shutdown.sh</span><br><span class="line"></span><br><span class="line"># 填写如下命令：</span><br><span class="line">redis-cli -h 192.168.169.129 -p 7000 shutdown</span><br><span class="line">redis-cli -h 192.168.169.129 -p 7001 shutdown</span><br><span class="line">redis-cli -h 192.168.169.129 -p 7002 shutdown</span><br><span class="line">redis-cli -h 192.168.169.129 -p 7003 shutdown</span><br><span class="line">redis-cli -h 192.168.169.129 -p 7004 shutdown</span><br><span class="line">redis-cli -h 192.168.169.129 -p 7005 shutdown</span><br></pre></td></tr></table></figure></p><p>关闭服务：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ./redis-shutdown.sh</span><br></pre></td></tr></table></figure></p><p>查看服务：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ps -ef|grep redis-server</span><br></pre></td></tr></table></figure></p><p>出现以下类似信息表示服务成功启动：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">redis      3062   1947  0 00:26 ?        00:00:00 redis-server 192.168.169.129:7000 [cluster]</span><br><span class="line">redis      3075   1947  0 00:26 ?        00:00:00 redis-server 192.168.169.129:7001 [cluster]</span><br><span class="line">redis      3080   1947  0 00:28 ?        00:00:00 redis-server 192.168.169.129:7002 [cluster]</span><br><span class="line">redis      3087   1947  0 00:28 ?        00:00:00 redis-server 192.168.169.129:7003 [cluster]</span><br><span class="line">redis      3092   1947  0 00:28 ?        00:00:00 redis-server 192.168.169.129:7004 [cluster]</span><br><span class="line">redis      3099   1947  0 00:28 ?        00:00:00 redis-server 192.168.169.129:7005 [cluster]</span><br><span class="line">redis      3132   3022  0 00:32 pts/4    00:00:00 grep --color=auto redis-server</span><br></pre></td></tr></table></figure></p><p>虽然六个服务都起来了， 但这时他们之间还不知道彼此的存在， 无法组成集群提供服务</p><h4 id="第三步：连接服务"><a href="#第三步：连接服务" class="headerlink" title="第三步：连接服务"></a>第三步：连接服务</h4><p>使用工具 ‘redis-trib.rb’ 将上面的六个节点连接起来， redis-trib.rb 是需要ruby环境<br>先安装ruby环境<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo apt-get install ruby</span><br></pre></td></tr></table></figure></p><p>为了执行 redis-trib.rb 需要安装gem redis<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo gem install redis</span><br></pre></td></tr></table></figure></p><p>安装时可能会被墙，可以在<a href="https://rubygems.org/gems/redis/versions/4.0.1" target="_blank" rel="external">RubyGems</a>下载最新版<br>使用命令关联集群（ip地址和对应的端口号）<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ cd /usr/local/redis-4.0.6/src</span><br><span class="line">$ ./redis-trib.rb create --replicas 1 192.168.169.129:7000 192.168.169.129:7001 192.168.169.129:7002 192.168.169.129:7003 192.168.169.129:7004 192.168.169.129:7005</span><br></pre></td></tr></table></figure></p><p>备注：参数1表示为每个主节点创建一个从节点，其他参数是实例的地址集合<br>出现以下信息表示集群启动成功：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt;&gt; Creating cluster</span><br><span class="line">&gt;&gt;&gt; Performing hash slots allocation on 6 nodes...</span><br><span class="line">Using 3 masters:</span><br><span class="line">192.168.169.129:7000</span><br><span class="line">192.168.169.129:7001</span><br><span class="line">192.168.169.129:7002</span><br><span class="line">Adding replica 192.168.169.129:7003 to 192.168.169.129:7000</span><br><span class="line">Adding replica 192.168.169.129:7004 to 192.168.169.129:7001</span><br><span class="line">Adding replica 192.168.169.129:7005 to 192.168.169.129:7002</span><br><span class="line">M: ef06386f81ea6ebcfd1750ce3f28dac6c8d1787d 192.168.169.129:7000</span><br><span class="line">   slots:0-5460 (5461 slots) master</span><br><span class="line">M: 73fd9b7f608dd31ad1dd793b79ea3b6991bf14f9 192.168.169.129:7001</span><br><span class="line">   slots:5461-10922 (5462 slots) master</span><br><span class="line">M: 8ad9a9283c0fc34ffdce686d0cf28426b843dbef 192.168.169.129:7002</span><br><span class="line">   slots:10923-16383 (5461 slots) master</span><br><span class="line">S: e08c6b78c4b6b866c4fa2154c3d4ea790cc3c2b1 192.168.169.129:7003</span><br><span class="line">   replicates ef06386f81ea6ebcfd1750ce3f28dac6c8d1787d</span><br><span class="line">S: fb7eab7cff0d5c06c500bdd6f138e4af970ca67b 192.168.169.129:7004</span><br><span class="line">   replicates 73fd9b7f608dd31ad1dd793b79ea3b6991bf14f9</span><br><span class="line">S: 0e889f689fcdf99061adcc807f6ed8815d330c14 192.168.169.129:7005</span><br><span class="line">   replicates 8ad9a9283c0fc34ffdce686d0cf28426b843dbef</span><br><span class="line">Can I set the above configuration? (type &apos;yes&apos; to accept): yes</span><br><span class="line">&gt;&gt;&gt; Nodes configuration updated</span><br><span class="line">&gt;&gt;&gt; Assign a different config epoch to each node</span><br><span class="line">&gt;&gt;&gt; Sending CLUSTER MEET messages to join the cluster</span><br><span class="line">Waiting for the cluster to join...</span><br><span class="line">&gt;&gt;&gt; Performing Cluster Check (using node 192.168.169.129:7000)</span><br><span class="line">M: ef06386f81ea6ebcfd1750ce3f28dac6c8d1787d 192.168.169.129:7000</span><br><span class="line">   slots:0-5460 (5461 slots) master</span><br><span class="line">   1 additional replica(s)</span><br><span class="line">M: 73fd9b7f608dd31ad1dd793b79ea3b6991bf14f9 192.168.169.129:7001</span><br><span class="line">   slots:5461-10922 (5462 slots) master</span><br><span class="line">   1 additional replica(s)</span><br><span class="line">M: 8ad9a9283c0fc34ffdce686d0cf28426b843dbef 192.168.169.129:7002</span><br><span class="line">   slots:10923-16383 (5461 slots) master</span><br><span class="line">   1 additional replica(s)</span><br><span class="line">S: e08c6b78c4b6b866c4fa2154c3d4ea790cc3c2b1 192.168.169.129:7003</span><br><span class="line">   slots: (0 slots) slave</span><br><span class="line">   replicates ef06386f81ea6ebcfd1750ce3f28dac6c8d1787d</span><br><span class="line">S: fb7eab7cff0d5c06c500bdd6f138e4af970ca67b 192.168.169.129:7004</span><br><span class="line">   slots: (0 slots) slave</span><br><span class="line">   replicates 73fd9b7f608dd31ad1dd793b79ea3b6991bf14f9</span><br><span class="line">S: 0e889f689fcdf99061adcc807f6ed8815d330c14 192.168.169.129:7005</span><br><span class="line">   slots: (0 slots) slave</span><br><span class="line">   replicates 8ad9a9283c0fc34ffdce686d0cf28426b843dbef</span><br><span class="line">[OK] All nodes agree about slots configuration.</span><br><span class="line">&gt;&gt;&gt; Check for open slots...</span><br><span class="line">&gt;&gt;&gt; Check slots coverage...</span><br><span class="line">[OK] All 16384 slots covered.</span><br></pre></td></tr></table></figure></p><p>使用redis-cli命令进入集群环境<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ redis-cli -h 192.168.169.129 -p 7000 -c</span><br></pre></td></tr></table></figure></p><p>备注：-h 指定IP地址 -p 指定端口<br>能进行如下测试表示成功<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">redis 192.168.169.129:7000&gt; set foo bar</span><br><span class="line">-&gt; Redirected to slot [12182] located at 192.168.169.129:7002</span><br><span class="line">OK</span><br><span class="line">redis 192.168.169.129:7002&gt; set hello world</span><br><span class="line">-&gt; Redirected to slot [866] located at 192.168.169.129:7000</span><br><span class="line">OK</span><br><span class="line">redis 192.168.169.129:7000&gt; get foo</span><br><span class="line">-&gt; Redirected to slot [12182] located at 192.168.169.129:7002</span><br><span class="line">&quot;bar&quot;</span><br><span class="line">redis 192.168.169.129:7000&gt; get hello</span><br><span class="line">-&gt; Redirected to slot [866] located at 192.168.169.129:7000</span><br><span class="line">&quot;world&quot;</span><br></pre></td></tr></table></figure></p><p>至此，Redis相关安装全部结束</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;最近的学习中，讲的都是在CenterOS上的Redis简单使用，奈何自己的笔记本上只有Ubuntu系统（版本：Ubuntu 16.04.3 LTS），翻阅网上各类关于Ubuntu上安装Redis的教程，记录自己不断踩坑的过程
    
    </summary>
    
      <category term="小试牛刀" scheme="http://visuper.github.io/visuper-blog/categories/%E5%B0%8F%E8%AF%95%E7%89%9B%E5%88%80/"/>
    
    
      <category term="潜龙在渊" scheme="http://visuper.github.io/visuper-blog/tags/%E6%BD%9C%E9%BE%99%E5%9C%A8%E6%B8%8A/"/>
    
  </entry>
  
  <entry>
    <title>2018，你好呀！</title>
    <link href="http://visuper.github.io/visuper-blog/2017/12/31/2017-12-31-2018%EF%BC%8C%E4%BD%A0%E5%A5%BD%E5%91%80%EF%BC%81/"/>
    <id>http://visuper.github.io/visuper-blog/2017/12/31/2017-12-31-2018，你好呀！/</id>
    <published>2017-12-31T14:13:00.000Z</published>
    <updated>2018-02-18T20:37:20.116Z</updated>
    
    <content type="html"><![CDATA[<p>年末已至，忽然有了想写点什么的冲动<br>最近看着朋友圈各自刷着18岁的自己，提醒我该长点心了，最能拼搏年纪就是现在了！<a id="more"></a></p><h3 id="新年那么好，那么暖"><a href="#新年那么好，那么暖" class="headerlink" title="新年那么好，那么暖"></a>新年那么好，那么暖</h3><p>2017的新年是和小弟在外婆家过的，融安镇-安宁村，很喜欢这个名字。<br>外婆记忆力不好的事是听老妈说的，有时候外公在都认不出外公来，想着都有些心疼外公。<br>我在那边的时候，其实很少和外公外婆聊天的，整天捧着笔记本窝在房里捣鼓自己的事。偶尔上趟街，其实怕上街，不会讲柳州话，老听不懂在讲些什么。</p><p>附近都是外公那一大家子的，过年的氛围很浓的。自然少不了每家都去蹭吃蹭喝，可唯独喝酒不行，不满意自己的就是这个了。小弟喝酒是可以的，家酿、啤的、白的、都能，比我好太多，<br>过年少不得的打牌活动也是有参与的，遗憾的是手气不行，输是常事，<br>新年就这样在简单和温馨的过去了，一天到晚的吃吃喝喝玩玩闹闹，<br>比较后悔的是没有多陪陪外公外婆他们，能去一次已经不容易，却不被自己珍惜。</p><p>新的一年祝愿他们多喜乐，长安宁</p><h3 id="意外总是突如其来的"><a href="#意外总是突如其来的" class="headerlink" title="意外总是突如其来的"></a>意外总是突如其来的</h3><p>从镇上到柳州市区有四个多小时车程，到火车站的时候，车刚好开了一分钟，一分不多一分不少。<br>讲道理7点从镇上出发，4个多小时还是错过了12点多的车，讲不通嘛，<br>只好重新买票，直达是不存在的了，所以呢，只能买了几个中转的票，<br>漫长归家旅途让我意识到，提前时间多早都好，只要不晚就来得及，毕竟转几站的钱省下来都可以吃顿好的了。几经波折，终是安全到家。</p><p>这段旅程倒是可惜了好多，到了不曾去过的城市，却没有时间去感受，欣赏另一番城市的景象。</p><h3 id="带都带不动的节奏"><a href="#带都带不动的节奏" class="headerlink" title="带都带不动的节奏"></a>带都带不动的节奏</h3><p>生活就是在写Bug，调Bug中度过的<br>作为万千码农中的一份子，日常生活不过如此了<br>原本还想说自己是程序猿的，看到网络上月薪不过三万的梗，瞬间心塞。<br>在写Bug的过程中，学习了很多新东西，<br>至少眼界开阔了，知道了全球最大的男性同性交友网站(Github)，这个叩开我新世界大门的平台<br>作为该平台的萌新一枚，还不敢在上面提交自己的日常，不敢Po自己的自拍<br>emmm…更不敢想什么结对编程….</p><p>慢慢的，接触到Github后，又知道了Github pages。这东西勾起了我的欲望<br>一想想自己可以在上面随意折腾自己喜欢的页面，刺激的不得了，每天大战至凌晨<br>一段时间下来，腰也好了，腿也不疼了，心脏也棒棒哒，一口气跑五步都不带喘气的<br>迫于设计细胞缺失，不得已去搜索好看的界面想办法去修改，<br>最后发现我怕缺的不是设计的细胞，应该是脑细胞。</p><h3 id="哪怕生活多想潜规则我，也有人陪在身边放肆欢笑"><a href="#哪怕生活多想潜规则我，也有人陪在身边放肆欢笑" class="headerlink" title="哪怕生活多想潜规则我，也有人陪在身边放肆欢笑"></a>哪怕生活多想潜规则我，也有人陪在身边放肆欢笑</h3><p>在暗无天日的写Bug工作中，<br>小亮砸基本上每个月都会过来玩，男人间就该有点说不清道不明的激情啊，其实是去KTV唱歌，两个人，唱的鬼哭狼嚎也没人说，不嚎了就是胡侃瞎聊，我吐槽我的，他吐槽他的，很有意思啊。<br>偶尔玩玩手游放松一下备受折磨的耳膜，顺带鄙视一下他的王者技术也是很开心的。<br>至少枯燥的生活中有那么一个人愿意大老远不嫌麻烦跑过来(谁让他那鬼地方没有玩的地方呢)，陪着你，也是很好很好的<br>至少我明白：生活不止眼前的苟且，还有远方的苟且，且过且珍惜。</p><h3 id="被打乱的生活节奏，依然美好"><a href="#被打乱的生活节奏，依然美好" class="headerlink" title="被打乱的生活节奏，依然美好"></a>被打乱的生活节奏，依然美好</h3><p>国庆假期原本是打算出去浪的飞起的，后来被一系列事情打破计划，人已崩溃，虽然没能出去成功。<br>但是在家陪着老爸老妈完整的追完一部剧了，现在剧名都不记得了，不过一起嗑瓜子看剧，瞎聊天，拌拌嘴什么的很有爱啊。<br>想想当时偶尔听逗比老爸跟着电视说两句台词，我妈在旁边开嘲讽，很幸福的，可惜两个老弟没回家。</p><h3 id="劝我出门对于bb来说无异于慢性自杀"><a href="#劝我出门对于bb来说无异于慢性自杀" class="headerlink" title="劝我出门对于bb来说无异于慢性自杀"></a>劝我出门对于bb来说无异于慢性自杀</h3><p>我是个很难出去玩的人，要是能够窝在家是件很爽的事啊，出去就是受罪。<br>可是，不管你多宅，总会有一个在你身边blabla不停，想带你出去的人<br>偶有时间会和bb出去吃烤肉，那个滋味回味无穷，基本上和bb在一起呢，都是听他说很多很多的事，我说不出什么事，不然他对不起bb这个词<br>现在的我们呢，走上了两条不归路，他选择了去实施，bb对开发并不热衷，关于更深层次的逻辑是不太喜欢的，当然，同为不归路，自然祝福他前路顺畅，如同我期望自己一样期望他</p><p>有时和唐杀马一起畅游王者峡谷，互喷(其实是被喷)，感受一下泼妇骂街的杀伤力<br>有时候调侃阿姨还没有男盆友，作为大龄剩女，我们很忧桑她的后半生<br>有时候骂着代码，却不得不去写。<br>其实好想记下身边近友的好多事啊，要是哪天我们彼此各奔东西，哪有时间再相聚。</p><h3 id="关于我想要的未来"><a href="#关于我想要的未来" class="headerlink" title="关于我想要的未来"></a>关于我想要的未来</h3><p>最近一段时间基本上处于在不停学习的一个状态，主要原因是确定了一个目标，一个目的地<br>目标:混到能拥有自己的一个窝<br>目的地:魔都<br>//放一张上海的图片<br>N+年的计划:学习更多的技术，准备写个人博客，记录我的漫长人生路<br>短期的规划:在上海寻一份工作并且在目前的职业上有更大的提升，不仅仅是技术，更多的是生活方式的改变，为人处世的态度，也希望认识更多优秀的人，带我混迹IT界。</p><p>上海有着魔都的名称，总让人忍不住上前，去感受她的魅力。<br>我还年轻，我想要另一种生活塑造一个全新的自己，我想要去我想去的城市，我想做我喜欢的工作。</p><p>唯有将那份无奈和心疼藏于心底：父母在家，也将要远行。</p><h3 id="那么，2018，你好呀！"><a href="#那么，2018，你好呀！" class="headerlink" title="那么，2018，你好呀！"></a>那么，2018，你好呀！</h3><p>我已经乘上你这趟列车，请你好好照顾我，我不知何时是归途。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;年末已至，忽然有了想写点什么的冲动&lt;br&gt;最近看着朋友圈各自刷着18岁的自己，提醒我该长点心了，最能拼搏年纪就是现在了！
    
    </summary>
    
      <category term="初露锋芒" scheme="http://visuper.github.io/visuper-blog/categories/%E5%88%9D%E9%9C%B2%E9%94%8B%E8%8A%92/"/>
    
    
      <category term="我的旅途" scheme="http://visuper.github.io/visuper-blog/tags/%E6%88%91%E7%9A%84%E6%97%85%E9%80%94/"/>
    
  </entry>
  
</feed>
